#Сортировка данных — это процесс упорядочивания элементов массива (или списка) по определенному правилу, например, по возрастанию или убыванию.

# Неубывающий и невозрастающий порядок

# Неубывающий порядок (по возрастанию):
# Каждое следующее значение не меньше предыдущего.
# Пример: [1, 2, 3, 4, 4, 5].

# Невозрастающий порядок (по убыванию):
#Каждое следующее значение не больше предыдущего.
#Пример: [5, 4, 4, 3, 2, 1].


#Сортировка по возрастанию

arr = [64, 25, 12, 22, 11]
n = len(arr)
for i in range(n):
    min_index = i  # предполагаем, что минимальный элемент на позиции i
    for j in range(i + 1, n):
        if arr[j] < arr[min_index]:
            min_index = j  # нашли новый минимальный элемент
    arr[i], arr[min_index] = arr[min_index], arr[i]  # меняем местами

print("Отсортированный массив по возрастанию:", arr)


#Сортировка по убыванию

arr = [64, 25, 12, 22, 11]
n = len(arr)
for i in range(n):
    max_index = i  # предполагаем, что максимальный элемент на позиции i
    for j in range(i + 1, n):
      if arr[j] > arr[max_index]:
        max_index = j  # нашли новый максимальный элемент
    arr[i], arr[max_index] = arr[max_index], arr[i]  # меняем местами

print("Отсортированный массив по возрастанию:", arr)

#Сортировка - встроенный метод, тоже показать и сказать, что ото оптимизирует и сокращает код!

arr = [64, 25, 12, 22, 11]
sorted_arr = sorted(arr)  # по умолчанию сортирует по возрастанию
print("Отсортированный массив по возрастанию:", sorted_arr)

arr = [64, 25, 12, 22, 11]
sorted_arr = sorted(arr, reverse=True)  # сортировка по убыванию
print("Отсортированный массив по убыванию:", sorted_arr)